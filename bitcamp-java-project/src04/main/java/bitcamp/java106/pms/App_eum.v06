package bitcamp.java106.pms;

import bitcamp.java106.pms.domain.Team;
import bitcamp.java106.pms.domain.Member;
import java.util.Scanner;

//ver0.6 : team/add 명령구현 => team메모리 배열 만들기
//ver0.5 : help 명령구현
//ver0.4 : quit명령어입력시 반복문을 종료
//ver0.3 : 사용자로부터 입력 받는것을 무한 반복한다.
//ver0.2 : 사용자로부터 입력을 받아 출력한다.
//ver0.1 : 명령입력 프롬프트를 출력
public class App_eum{

    public static void main(String[] args){

        Scanner keyScan = new Scanner(System.in);
        Team[]teams = new Team[1000];//Team 객체 주소를 1000개만들기
        int teamIndex = 0; // team 배열의 방주소

        while(true){
            System.out.print("명령> ");
            String input = keyScan.nextLine().toLowerCase();//입력받자마자 가공
            
            if(input.equals("quit")){
                System.out.println("안녕히 가세요!");
                break;
            }else if(input.equals("help")){
                System.out.println("[도움말]");
                System.out.println("팀 등록 명령 : team/add");
                System.out.println("팀 조회 명령 : team/list");
                System.out.println("팀 상세조회 명령 : team/view 팀명");
                System.out.println("회원 등록 명령 : member/add");
                System.out.println("회원 조회 명령 : memeber/list");
                System.out.println("회원 상세조회 명령 : meber/view 아이디");
                System.out.println("종료 : quit");
                System.out.println(); //이쁘게 보이기 위해서
                continue; //반복문의 조건 비교문으로 돌아가기
                /*명령어가 많아지면 코드가 증가 => 메서드 활용을 통해 코드 효율*/
            }else if(input.equals("team/add")){
                System.out.println("[팀 정보 입력]");
                Team team = new Team();
                
                System.out.print("팀명? ");
                team.name = keyScan.next();

                System.out.print("설명? ");
                team.description = keyScan.next();

                System.out.print("최대인원 ? ");
                team.maxQty = keyScan.nextInt();

                keyScan.nextLine();

                System.out.print("시작일? ");
                team.startDate = keyScan.nextLine();

                System.out.print("종료일? ");
                team.endDate = keyScan.nextLine();

                //팀정보가 담겨있는 객체의 주소를 배열에 보관한다. 
                teams[teamIndex++] = team;
                //teamIndex++;

                //System.out.printf("%s, %s, %d, %s, %s\n",
                //team.name, team.description, team.maxQty,
                //team.startDate, team.endDate);
                //System.out.println();
                continue;
            }

        }
    }
}