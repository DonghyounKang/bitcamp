<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
    
    
    <context:annotation-config/>
   	<context:component-scan base-package="bitcamp.java106.step13_AOP.ex2"/>
   	
   	<!-- 필터 객체 생성 -->
   	<bean id="MyAdvice" class="bitcamp.java106.step13_AOP.ex2.MyAdvice"/>
   	
   	
   	<!-- AOP 적용 -->
   	<aop:config>
   		<!-- 어느 Pointcut에 어떤 Advice를 끼워 넣을 지 설정한다.  -->
   		<aop:aspect id="aspect1" ref="MyAdvice">
   			<!-- 필터를 끼워넣을 위치를 지정한다 -->
   			<aop:pointcut id="pointcut1" 
   			expression="execution(* bitcamp.java106.step13_AOP.ex2.*.m2(..))" />
   			
   			<!-- 필터의 pointcut을 실행하기 전에 필터의 어떤 메서드를 언제 실행할 것인지 지정한다. -->
   			<aop:before pointcut-ref="pointcut1" method="advice2" />
   		</aop:aspect>
   	</aop:config>
</beans>