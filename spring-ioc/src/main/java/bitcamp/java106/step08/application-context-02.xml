<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
    
   	<bean id="c1" class="bitcamp.java106.step08.Car2">
	   	<property name="model" value="티코"/>
	   	<property name="maker" value="비트자동차"/>
	   	<property name="cc" value="890"/>
	   	<property name="auto" value="true"/>
	</bean>

	<bean id="e1" class="bitcamp.java106.step08.Engine">
		<property name="maker" value="비트자동차"/>
		<property name="valve" value="16"/>
		<property name="cylinder" value="4"/>
		
	</bean>   	
	
	<!-- BeanPostProcessor 인터페이스
		=> Spring IOC container는 객체중에 이 인터페이스를 구현한 객체가  있다면
			모든 객체 생성한 후에
			이 구현체의 postProcessAfter(Before)Initialization()메서드를 호출하여
			Bean생성이후의 초기화 작업을 수행한다.
		=> 그래서 인터페이스 명이 BeanPostProcessor(객체 생성 후 처리기)인 것이다.
		 -->

	<!-- @Autowired annotation을 처리하고 싶다면
		Bean 생성 이후에 annotation을 처리할 BeanPostProcessor를 등록
		그러면 Spring IOC Container는 bean을 모두 생성한 후에
		@Autowired annotation을 처리하기 위해 이 객체의 메서드를 호출 할 것이다.
		=> 다음 객체를 Spring IOC Container에 등록하지 않으면 
			@Autowired annotation은 처리되지 않는다.
	-->
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
</beans>