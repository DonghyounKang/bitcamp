//18.03.06(2주차)
// 배열 - 배열 레퍼런스와 배열 인스턴스의 관계(부제: Garbage & Garbage Collector)
package step02;

public class Exam09_4{
    public static void main(String[] args){
         
        int[] arr1;
        arr1 = new int[]{100, 200, 300};

        System.out.println(arr1[0]);
        System.out.println(arr1[1]);
        System.out.println(arr1[2]);
        /*
        새로운 int 배열을 확보하여 레퍼런스에 그 주소를 저장한다
         => arr1 변수에는 새배열의 주소가 저장
         그러면 이전 배열의 주소는 잃어버린다
         주소를 잃어버린 배열은 사용할 수없다
         이렇게 사용할 수 없는 메모리(인스턴스)를
         garbage라 부른다
        */
        arr1 = new int[]{10, 20, 30, 40, 50};
        
        System.out.println(arr1[0]);
        System.out.println(arr1[1]);
        System.out.println(arr1[2]);

        /* 
        결과
        100
        200
        300 // 주소값을 잃어버림 -> garbage(dangling object)
        10
        20
        30
        
        -garbage : 주소를 잃어버려 사용할 수 없는 메모리(인스턴스)
        => JVM 종료시 OS에게 사용한 메모리를 반납해야 하기 때문에 
        자동으로 해제된다 but JVM이 실행하는 중에 개발자가 임의 제거 불가능
        오직 가비지 컬렉터(garbage collector)만이 가비지를 해제할 수 있다
        */
    }
}  
        /*
        가비지 컬렉터(garbage collector)
        -인스턴스의 주소를 알고 있는 변수가 없을 경우
            그 인스턴스는 가비지로 간주
        -가비지 메모리를 재사용할 수 있도록 하는 방법
            개발자가 임의로 해제 불가능
            가비지 컬렉터가 실행되어야만 해제시킬 수 있다
 
        -가비지 컬렉터의 실행    
            다음의 경우에 가비지컬렉터가 실행되어 가비지들이 해제된다
            1) 메모리가 부족할 경우
            -os에게 메모리 요청 전에 먼저 가비지 청소 후 요청 여부 결정

            2) CPU가 한가할 때
            -24/365 멈춤없이 JVM이 실행될 경우 CPU가 한가한 시간에 가비지를 청소할 
             수 있다. 단 정확한 시간지정, 예측 불가능
             
            3) 개발자가 가비지컬렉터를 실행하라고 명령을 내릴 때
            - 즉시 실행되는 것은 아니다
            - 빠른 시일 내에 가비지를 실행하라고 JVM에 예약하는 것이다.
        
        가비지 컬렉션(Garbage Collection)?
         - 가비지 컬렉터를 통해서 가비지를 해제시키는 것

         - 가비지 컬렉션의 문제점?
          가비지 컬렉터가 실행되기 전까지는 일정 시간 쓰레기 메모리가 유지
         - 메모리 사용률을 극한으로 끌어올릴 수 없다.
         - 메모리 사용에 대해 짜게 굴지말라 => 메모리 값이 싸다!
        */     

/*
결론
- 가비지는 가비지 컬렉터가 자기 나름의 조건에 따라 실행할 것이니
  개발자는 신경쓰지 말라
- 만약 메모리를 개발자가 마음대로 조작하고 싶으면, C/C++로 프로그래밍하라
- 가비지 컬렉터라는 개념을 등장시킨 이유는 C/C++개발자들이 메모리를 마음대로 조작하다가
  시스템에 치명적인 문제를 자주 일으켰기 때문에 그것을 차단하기 위해 나온 개념
- 가비지 컬렉터를 개발자가 임의로 동작시키는 것 자체가 가비지 컬렉터의 존재 이유를
  무시하는 것이 된다.
  따라서 메모리를 임의로 해제할 생각을 말라
*/